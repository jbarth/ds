package com.ubs.gtp.data.resource.client;

import com.ubs.gtp.data.domain.client.ClientDto;
import com.ubs.gtp.data.domain.dao.ClientDao;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.stereotype.Repository;
import org.springframework.transaction.annotation.Transactional;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;

import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.List;

/**
 * Controller for the client resource.
 *
 * @author Joshua Barth
 * @author Mihkel Aamer
 * @author Jakub D Kozlowski
 * @since 0.3
 */
@Controller
@Transactional
@Repository
public class ClientController {

    @Autowired
    private ClientDao clients;

    @RequestMapping(value = "/client/{id}", method = RequestMethod.GET)
    @ResponseBody
    public ModelAndView getClientInfo(final @PathVariable int id) {
        final ClientDto client = clients.getById(id);
        final SimpleDateFormat f = new SimpleDateFormat("dd-MMM-yyyy");
        System.out.println(f.format(client.getPortfolios().iterator().next().getStartdate()));
        return new ModelAndView("client", "client", client);
    }

    @RequestMapping(value = "/faClient/{faId}", method = RequestMethod.GET)
    @ResponseBody
    public List<Integer> getFAClients(final @PathVariable int faId) {

        //DB CALL USING faId
        List<Integer> clientIds = new ArrayList<Integer>();
        clientIds.add(123);
        clientIds.add(4566);

        return clientIds;
    }

//	@RequestMapping(value = "/client/add", method = RequestMethod.POST)
//	@ResponseBody
//	public AddClientResponseDto addClient(@RequestBody AddClientDto request)
//	{
//		AddClientResponseDto response = new AddClientResponseDto();
//		response.setName(request.getName());
//		response.setSurname(request.getSurname());
//		response.setCredit(request.getCredit());
//		response.setUsername(request.getUsername());
//		// Get the new client ID
//		response.setID(String.valueOf(Math.round(random.nextDouble()*10000)));	
//		// Generate random pin
//		response.setPin(String.valueOf(Math.round(random.nextDouble()*10000)));		
//		// Generate random password		
//        response.setPassword(new BigInteger(60, random).toString(32));
//        return response;		
//	}
}
